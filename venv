# Create a python virtual environment and install ipython
# Need to be sources instead of called as the activation of venv
# would be made in the nested shell and not the global interactive shell
function venv {
  if [ -d ./venv/ ]; then
    source ./venv/bin/activate
  elif [ -d ../venv/ ]; then
    read -r -e -p "Found venv in parent folder. Do you want to load it instead (Y/n) ?" choice
    if [[ "$choice" == [Yy]*  ]] || [[ "$choice" == '' ]]; then
      source ../venv/bin/activate
    fi
  else
    read -r -e -p "No venv in current or parent folder, do you want to create venv (Y/n)?" choice
    if [[ "$choice" == [Yy]* ]] || [[ "$choice" == '' ]]; then
      
      echo "Creating Python virtual ..."
      python3 -m venv ./venv/ && \

      echo "Sourcing virtual environment..."
      source ./venv/bin/activate && \

      echo "Installing ipython..."
      pip install ipython --quiet && \

      if [ -f ./requirements.txt ]; then
        echo "Installing requirements..."
        pip install -r requirements.txt --quiet
      fi

      echo "Refreshing shell hash table..."
      hash -r || \
        {
          local error_message="The command failed: "
          [[ $? -eq 1 ]] && error_message+="'python3 -m venv ./venv/'"
          [[ $? -eq 2 ]] && error_message+="'source ./venv/bin/activate'"
          [[ $? -eq 3 ]] && error_message+="'pip install ipython'"
          [[ $? -eq 5 ]] && error_message+="'hash -r'"
          echo "$error_message"
      }
    fi
  fi
}
